{
    "levels": [
        {
            "number": 1,
            "topic": "Arrays",
            "description": "Learn the difference between direct array access and sequential search operations",
            "requiredStars": 0,
            "questions": [
                {
                    "type": "visualization",
                    "title": "Understanding Array Access Patterns",
                    "description": "Learn the difference between direct array access and sequential search operations",
                    "review": "Key concepts: 1) Storing data in an array means we can jump straight to a position in the array \n 2) Array is limited when we don't know the index of the item we are looking for",
                    "hint": "None",
                    "difficulty": 1,
                    "visualization": {
                        "code": [
                            "def direct_access(arr, index):",
                            "    return arr[index]",
                            "",
                            "def sequential_search(arr, target):",
                            "    for i in range(len(arr)):",
                            "        if arr[i] == target:",
                            "            return i",
                            "    return -1"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "When data is stored in an array, the computer actually does not know what is stored in each position. It just knows where the array is stored in memory and some basic information (length, slotsize, etc.) about the array.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "However, we can use that information to instantly access any index in an array using a formula: \nbaseAddress + (index * elementSize). ",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "100"
                                    },
                                    {
                                        "value": "34",
                                        "label": "102"
                                    },
                                    {
                                        "value": "25",
                                        "label": "104"
                                    },
                                    {
                                        "value": "12",
                                        "label": "106"
                                    },
                                    {
                                        "value": "22",
                                        "label": "108"
                                    },
                                    {
                                        "value": "11",
                                        "label": "110"
                                    },
                                    {
                                        "value": "90",
                                        "label": "112"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "Let's say our array starts at memory address 100 and each element takes 2 bytes",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "100"
                                    },
                                    {
                                        "value": "34",
                                        "label": "102"
                                    },
                                    {
                                        "value": "25",
                                        "label": "104"
                                    },
                                    {
                                        "value": "12",
                                        "label": "106"
                                    },
                                    {
                                        "value": "22",
                                        "label": "108"
                                    },
                                    {
                                        "value": "11",
                                        "label": "110"
                                    },
                                    {
                                        "value": "90",
                                        "label": "112"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "To access index 3 we apply the formula: baseAddress + (index * elementSize). And the computer calculates: 100 + (3 * 2) = 106",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "100"
                                    },
                                    {
                                        "value": "34",
                                        "label": "102"
                                    },
                                    {
                                        "value": "25",
                                        "label": "104"
                                    },
                                    {
                                        "value": "12",
                                        "label": "106",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "22",
                                        "label": "108"
                                    },
                                    {
                                        "value": "11",
                                        "label": "110"
                                    },
                                    {
                                        "value": "90",
                                        "label": "112"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "If we want to access index 5, what value will we get using the formula: 100 + (5 * 2)?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "108",
                                    "110",
                                    "112",
                                    "114"
                                ],
                                "multipleChoiceCorrectAnswer": "110",
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "100"
                                    },
                                    {
                                        "value": "34",
                                        "label": "102"
                                    },
                                    {
                                        "value": "25",
                                        "label": "104"
                                    },
                                    {
                                        "value": "12",
                                        "label": "106"
                                    },
                                    {
                                        "value": "22",
                                        "label": "108"
                                    },
                                    {
                                        "value": "11",
                                        "label": "110"
                                    },
                                    {
                                        "value": "90",
                                        "label": "112"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "This is why array access is instant - no matter the index, we can calculate its exact memory location instantly",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "100"
                                    },
                                    {
                                        "value": "34",
                                        "label": "102"
                                    },
                                    {
                                        "value": "25",
                                        "label": "104"
                                    },
                                    {
                                        "value": "12",
                                        "label": "106"
                                    },
                                    {
                                        "value": "22",
                                        "label": "108"
                                    },
                                    {
                                        "value": "11",
                                        "label": "110",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "90",
                                        "label": "112"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 4,
                                "comment": "However, if we do not know the specific index of an item, we will have to search through the array one by one",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "We start with the first index (index 0). It is not 25, so we move to the next index (index 1)",
                                "userInputRequired": false,
                                "multipleChoiceCorrectAnswer": "No",
                                "nodes": [
                                    {
                                        "value": "64",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "On to next element (index 1). It is still not 25",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 6,
                                "comment": "Onto index 2 and we have found 25! Notice how we had to check elements one by one until we found it",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 6,
                                "comment": "While arrays give us instant access when we know the index, the trade-off becomes clear when we need to find specific values - we must resort to checking elements one by one, making our search time depend on the array's size.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "64",
                                        "label": "0"
                                    },
                                    {
                                        "value": "34",
                                        "label": "1"
                                    },
                                    {
                                        "value": "25",
                                        "label": "2"
                                    },
                                    {
                                        "value": "12",
                                        "label": "3"
                                    },
                                    {
                                        "value": "22",
                                        "label": "4"
                                    },
                                    {
                                        "value": "11",
                                        "label": "5"
                                    },
                                    {
                                        "value": "90",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 6,
                                "comment": "In the worst-case scenario when we want to search for 25 (assuming it is in the array), where would it be?",
                                "hint": "The worst-case scenario is when we have to check every element in the array to find the target",
                                "availableElements": [
                                    "25"
                                ],
                                "userInputRequired": true,
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 6,
                                "comment": "Exactly! In the worst-case scenario, we would have to check every element in the array to find the target, the only worse case is if the target is not in the array at all",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "25",
                                        "isHighlighted": true,
                                        "label": "6"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Understanding Dynamic Arrays",
                    "description": "Learn how dynamic arrays automatically resize to accommodate new elements",
                    "hint": "",
                    "review": "Key concepts: 1) Arrays double in size when full \n2) Amortized O(1) insertion time \n3) Memory is allocated in advance \n4) Arrays shrink when mostly empty",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "def append(arr, value):",
                            "    # Check if array is at capacity",
                            "    if len(arr) == arr.capacity:",
                            "        # Double the capacity",
                            "        new_capacity = arr.capacity * 2",
                            "        new_arr = [None] * new_capacity",
                            "        # Copy all elements to new array",
                            "        for i in range(len(arr)):",
                            "            new_arr[i] = arr[i]",
                            "        arr = new_arr",
                            "        arr.capacity = new_capacity",
                            "",
                            "    # Add new element",
                            "    arr[len(arr)] = value",
                            "",
                            "def pop(arr):",
                            "    # Remove and return last element",
                            "    if len(arr) == 0:",
                            "        return None",
                            "    value = arr[len(arr) - 1]",
                            "    arr[len(arr) - 1] = None",
                            "    # Shrink array if using less than 25% of capacity",
                            "    if len(arr) < arr.capacity // 4:",
                            "        new_capacity = arr.capacity // 2",
                            "        new_arr = [None] * new_capacity",
                            "        for i in range(len(arr)):",
                            "            new_arr[i] = arr[i]",
                            "        arr = new_arr",
                            "        arr.capacity = new_capacity",
                            "    return value",
                            "",
                            "def test_dynamic_array():",
                            "    # Create array with capacity 4",
                            "    arr = DynamicArray(4)",
                            "    append(arr, 10)",
                            "    append(arr, 20)",
                            "    append(arr, 30)",
                            "    append(arr, 40)",
                            "    append(arr, 50)",
                            "    pop(arr)",
                            "    pop(arr)",
                            "    pop(arr)",
                            "    append(arr, 15)",
                            "    return arr"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "In the last level, we learned that array sizes are fixed, but we can use dynamic arrays to make them more flexible and practical. Let's start with a dynamic array of capacity 4, containing 3 elements:",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "When we try to append 40, first we check if we're at capacity",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 13,
                                "comment": "Since we still have space, we can directly append 40",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Now when we try to append 50, the array is full as we already have 4 elements. Time to resize!",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "We create a new array with double the capacity (8 spaces)",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    },
                                    {
                                        "value": "",
                                        "label": "7"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 8,
                                "comment": "Copy all existing elements to the new array",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "isHighlighted": true,
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    },
                                    {
                                        "value": "",
                                        "label": "7"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 13,
                                "comment": "Finally, we can append 50 to the resized array",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "label": "3"
                                    },
                                    {
                                        "value": "50",
                                        "isHighlighted": true,
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    },
                                    {
                                        "value": "",
                                        "label": "7"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 16,
                                "comment": "Let's look at pop operations. Starting with this array:",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    },
                                    {
                                        "value": "",
                                        "label": "7"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 21,
                                "comment": "Pop removes the last element (30)",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    },
                                    {
                                        "value": "",
                                        "label": "6"
                                    },
                                    {
                                        "value": "",
                                        "label": "7"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 23,
                                "comment": "Now we're using < 25% of capacity (2/8), so we'll shrink the array to save memory",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            
                            {
                                "lineNumber": 32,
                                "comment": "Let's try to combine our knowledge and go through an example. Starting with an empty array of capacity 4",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 45,
                                "comment": "After all these operations, what do you think will be the final capacity of the array?",
                                "hint": "We doubled the capacity when we ran out of space, and we halved the capacity when we had less than 25% of the array used",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "2",
                                    "4",
                                    "8",
                                    "16"
                                ],
                                "multipleChoiceCorrectAnswer": "4",
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 45,
                                "comment": "Great, now let's see if you can place the final elements in their correct positions",
                                "userInputRequired": true,
                                "availableElements": [
                                    "10",
                                    "15",
                                    "20",
                                    "30",
                                    "40",
                                    "50"
                                ],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 45,
                                "comment": "Great! Now you know how dynamic arrays work!",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "15",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Understanding Contiguous Memory in Arrays",
                    "description": "Learn why arrays require continuous memory and the implications for insertions and deletions",
                    "hint": "",
                    "review": "Key concepts: 1) Array elements must stay together in memory \n2) Inserting/deleting requires shifting elements \n3) Array size must be declared in advance",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "def insert_at_index(arr, index, value):",
                            "    # First check if array is full",
                            "    if len(arr) >= arr.maxsize:",
                            "        return False",
                            "",
                            "    # Shift all elements after index to the right",
                            "    for i in range(len(arr)-1, index, -1):",
                            "        arr[i] = arr[i-1]",
                            "",
                            "    # Insert the new value",
                            "    arr[index] = value",
                            "    return True",
                            "",
                            "def delete_at_index(arr, index):",
                            "    # Shift all elements after index to the left",
                            "    for i in range(index, len(arr)-1):",
                            "        arr[i] = arr[i+1]",
                            "",
                            "    # Clear last element",
                            "    arr[len(arr)-1] = None",
                            "",
                            "def delete_multiple_elements(arr, indices):",
                            "    for index in indices:",
                            "        delete_at_index(arr, index)",
                            "",
                            "delete_multiple_elements([10, 20, 30, 40, 50, 60], [1, 3, 5])"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "Let's understand insertion in a fixed-size array. First, we check if there's space in the array.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "Trying to insert 25 at position 1. First step: Check if array is full",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Array is full! We return false or throw an error so that we don't overwrite existing data.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Let's try again with a non-full array. Since the array length (3) is less than the maxsize (4), we have space to insert the new value.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "But index 1, where we want to insert 25, is already occupied by 20",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 7,
                                "comment": "So we have to shift elements right since we have empty space at the end. We start by copying the rightmost element to the empty space.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3",
                                        "isHighlighted": true
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 2,
                                        "to": 3,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 7,
                                "comment": "After copying 30 to the empty space, we can shift 20 to the next position.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]

                            },
                            {
                                "lineNumber": 7,
                                "comment": "After copying 20, we can now safely add 25 to 20's old position",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 7,
                                "comment": "Finally insert 25 at position 1. And we are done!",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "25",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 14,
                                "comment": "Now let's learn about deletion. Starting with this array:",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "25",
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 15,
                                "comment": "Let's delete the element at position 1 (value 25).",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "25",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 17,
                                "comment": "The loop starts with the element we were going to delete, where we take the element next to it and copy it back there",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "25",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 17,
                                "comment": "After the first loop, what will the array look like?",
                                "hint": "We are copying elements from the left to the right",
                                "userInputRequired": true,
                                "availableElements": [
                                    "10",
                                    "25",
                                    "20",
                                    "30"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "25",
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 17,
                                "comment": "Great! Now we do the same for the rest of the array",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "20",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 17,
                                "comment": "Now that we have copied 30 over to index 2, what should we do next?",
                                "hint": "Look at line 20 of the code",
                                "userInputRequired": true,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "30",
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 20,
                                "comment": "That is right! We clear the last element by setting it to None",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "3"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 26,
                                "comment": "Let's try a more complex example: delete_multiple_elements([10, 20, 30, 40, 50, 60], [1, 3, 5]). Here's our starting array:",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "20",
                                        "label": "1"
                                    },
                                    {
                                        "value": "30",
                                        "label": "2"
                                    },
                                    {
                                        "value": "40",
                                        "label": "3"
                                    },
                                    {
                                        "value": "50",
                                        "label": "4"
                                    },
                                    {
                                        "value": "60",
                                        "label": "5"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 26,
                                "comment": "After we run this line of code, what will the array look like? Place the remaining numbers in their correct positions.",
                                "userInputRequired": true,
                                "hint": "We are deleting elements at indices 1, 3, and 5",
                                "availableElements": [
                                    "10",
                                    "20",
                                    "30",
                                    "40",
                                    "50",
                                    "60"
                                ],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 25,
                                "comment": "Perfect! Now you understand how multiple deletions work in an array. The remaining elements shift left to fill the gaps.",
                                "userInputRequired": false,
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "0"
                                    },
                                    {
                                        "value": "30",
                                        "label": "1"
                                    },
                                    {
                                        "value": "50",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "number": 2,
            "topic": "Linked Lists",
            "description": "Learn about linked lists and how to build them step by step.",
            "requiredStars": 0,
            "questions": [
                {
                    "type": "visualization",
                    "title": "Understanding Circular Arrays",
                    "description": "Learn how circular arrays work by watching the code execute and then building your own operations",
                    "hint": "Key formulas: 1) For enqueue: rear = (rear + 1) % size moves rear forward, wrapping to 0 when needed. 2) For dequeue: front = (front + 1) % size moves front forward similarly. 3) Array is full when (rear + 1) % size equals front!",
                    "review": "Excellent! You've mastered both enqueue and dequeue operations on a circular array, including handling empty and full conditions.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "class CircularArray:",
                            "    def __init__(self, size=6):",
                            "        self.size = size",
                            "        self.array = [None] * size",
                            "        self.front = -1",
                            "        self.rear = -1",
                            "",
                            "    def is_empty(self):",
                            "        return self.front == -1",
                            "",
                            "    def is_full(self):",
                            "        return (self.rear + 1) % self.size == self.front",
                            "",
                            "    def enqueue(self, value):",
                            "        if self.is_full():",
                            "            return False",
                            "        if self.is_empty():",
                            "            self.front = 0",
                            "        self.rear = (self.rear + 1) % self.size",
                            "        self.array[self.rear] = value",
                            "        return True",
                            "",
                            "    def dequeue(self):",
                            "        if self.is_empty():",
                            "            return None",
                            "        value = self.array[self.front]",
                            "        self.array[self.front] = None",
                            "        if self.front == self.rear:",
                            "            self.front = self.rear = -1",
                            "        else:",
                            "            self.front = (self.front + 1) % self.size",
                            "        return value"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 2,
                                "comment": "Let's understand how CircularArray works. We start with an empty array of size 6, and two pointers: front and rear, both initialized to -1",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 8,
                                "comment": "The is_empty() method checks if the array is empty. An array is empty when front is -1",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 11,
                                "comment": "The is_full() method is more complex. Let's see how it works with some examples",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 12,
                                "comment": "What will be the result of (rear + 1) % size in this case?",
                                "userInputRequired": false,
                                
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1",
                                    "4",
                                    "5"
                                ],
                                "multipleChoiceCorrectAnswer": "5",
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 12,
                                "comment": "Since (rear + 1) % size (5) equals front (0), this means the array is full. If they were different, it would mean we have space to add another element.",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 14,
                                "comment": "Let's try enqueuing elements. First, let's add 'A' to the empty array, where should we put A?",
                                "hint": "The rear pointer should be incremented to 0, since the array is empty and we're adding the first element",
                                "userInputRequired": true,
                                "availableElements": [
                                    "A"
                                ],
                                "nodes": [
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Since array was empty, front is set to 0. Rear is also set to 0 for the first element",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 0
                                }
                            },
                            {
                                "lineNumber": 20,
                                "comment": "For the next element 'B', where should we put B?",
                                "userInputRequired": true,
                                "availableElements": [
                                    "B"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Notice how the rear pointer moved from 0 to 1 using the formula (rear + 1) % size. This is how we maintain the circular nature of the array - when we reach the end, the modulo operation wraps us back to the beginning.",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Perfect! Now let's add 'C'. Rear will move to (1 + 1) % 6 = 2",
                                "userInputRequired": true,
                                "availableElements": [
                                    "C"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 2
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Great! Let's see what happens when we reach the end. Add 'D', 'E', and 'F'",
                                "userInputRequired": true,
                                "availableElements": [
                                    "D",
                                    "E",
                                    "F"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 2
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "The array is now full! Notice how rear points to the last element and (rear + 1) % size equals front",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 23,
                                "comment": "Let's start the dequeue operation",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 24,
                                "comment": "First we check if the queue is empty (it's not since front is 0)",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "value"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 26,
                                "comment": "Get the value at front (A) and set that position to None",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 27,
                                "comment": "Since front (0) doesn't equal rear (5), we go to the else block",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 29,
                                "comment": "Move front forward using (front + 1) % size = (0 + 1) % 6 = 1",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 1,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 23,
                                "comment": "Now let's call dequeue() again. What happens to B?",
                                "userInputRequired": true,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 1,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 29,
                                "comment": "Perfect! We dequeued B, set position 1 to None, and moved front to 2. The queue now contains [C, D, E, F]",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "isHighlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 2,
                                    "rear": 5
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Understanding Queue Implementation",
                    "description": "Learn how queues work by watching the code execute and then building your own operations",
                    "hint": "Key concepts: 1) Front removes elements, Rear adds elements 2) Count tracks number of elements 3) Use modulo (%) for wraparound!",
                    "review": "Great job! You've mastered how queue operations work with fixed arrays, including empty and full conditions.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "class FixedQueue:",
                            "    def __init__(self, size=5):",
                            "        self.size = size",
                            "        self.array = [None] * size",
                            "        self.front = 0",
                            "        self.rear = -1",
                            "        self.count = 0",
                            "",
                            "    def is_empty(self):",
                            "        return self.count == 0",
                            "",
                            "    def is_full(self):",
                            "        return self.count == self.size",
                            "",
                            "    def enqueue(self, value):",
                            "        if self.is_full():",
                            "            return False",
                            "        self.rear = (self.rear + 1) % self.size",
                            "        self.array[self.rear] = value",
                            "        self.count += 1",
                            "        return True",
                            "",
                            "    def dequeue(self):",
                            "        if self.is_empty():",
                            "            return None",
                            "        value = self.array[self.front]",
                            "        self.array[self.front] = None",
                            "        self.front = (self.front + 1) % self.size",
                            "        self.count -= 1",
                            "        return value"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 2,
                                "comment": "Let's understand how FixedQueue works. We start with an empty array of size 5, front at 0, rear at -1, and count at 0",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": -1,
                                    "count": 0
                                }
                            },
                            {
                                "lineNumber": 9,
                                "comment": "The is_empty() method checks if count is 0. This tells us if there are any elements in the queue",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": -1,
                                    "count": 0
                                }
                            },
                            {
                                "lineNumber": 10,
                                "comment": "If we add element 'A', what will is_empty() return: True(0) or False(1)?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1"
                                ],
                                "multipleChoiceCorrectAnswer": "0",
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 0,
                                    "count": 1
                                }
                            },
                            {
                                "lineNumber": 15,
                                "comment": "Let's try to enqueue value 'F' when queue is full. First step: check if queue is full",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 5
                                }
                            },
                            {
                                "lineNumber": 16,
                                "comment": "Since count equals size, is_full() returns True. Will enqueue return True(1) or False(0)?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1"
                                ],
                                "multipleChoiceCorrectAnswer": "0",
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 5
                                }
                            },
                            {
                                "lineNumber": 17,
                                "comment": "When enqueue fails, we calculate (rear + 1) % size but never assign it. What would this value be?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1",
                                    "4",
                                    "5"
                                ],
                                "multipleChoiceCorrectAnswer": "0",
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 5
                                }
                            },
                            {
                                "lineNumber": 18,
                                "comment": "We never reach this line when full. The queue remains unchanged with count=5",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 5
                                }
                            },
                            {
                                "lineNumber": 22,
                                "comment": "Let's see what happens when we dequeue. First we check if queue is empty",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "A",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 5
                                }
                            },
                            {
                                "lineNumber": 25,
                                "comment": "We remove 'A' from front position and set that slot to None",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 4
                                }
                            },
                            {
                                "lineNumber": 27,
                                "comment": "Front moves to next position. What will (front + 1) % size equal?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1",
                                    "2",
                                    "5"
                                ],
                                "multipleChoiceCorrectAnswer": "1",
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "isHighlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 1,
                                    "rear": 4,
                                    "count": 4
                                }
                            },
                            {
                                "lineNumber": 22,
                                "comment": "After several dequeues, we're at the end. What happens when we dequeue 'E'?",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "isHighlighted": true,
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 4,
                                    "rear": 4,
                                    "count": 1
                                }
                            },
                            {
                                "lineNumber": 27,
                                "comment": "After removing 'E', front will wrap around. What will (front + 1) % size equal?",
                                "userInputRequired": true,
                                "isMultipleChoice": true,
                                
                                "multipleChoiceAnswers": [
                                    "0",
                                    "1",
                                    "4",
                                    "5"
                                ],
                                "multipleChoiceCorrectAnswer": "0",
                                "nodes": [
                                    {
                                        "value": "",
                                        "isHighlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4,
                                    "count": 0
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Deleting from a Linked List",
                    "description": "Learn how to remove a node from a linked list",
                    "hint": "To delete a node, we need to update the previous node's pointer to skip over the node we want to delete. The skipped node will no longer be part of the list.",
                    "review": "Well done! You've learned how to delete nodes from a linked list. By updating the pointers to skip a node, we effectively remove it from the list without breaking the chain.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func deleteNode(after: Node) {",
                            "    // Skip the next node by updating the pointer",
                            "    after.next = after.next?.next",
                            "}"
                        ],
                        "dataStructureType": "linkedList",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "We start with an existing linked list",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "6"
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 2,
                                        "to": 3,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Update the pointer to skip node with value 6",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "6",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 2,
                                        "to": 3,
                                        "style": "straight",
                                        "isHighlighted": true
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Node is now removed from the list",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "number": 3,
            "topic": "Binary Trees",
            "description": "Learn about binary trees and how they organize data hierarchically.",
            "requiredStars": 3,
            "questions": [
                {
                    "type": "visualization",
                    "title": "Building a Binary Tree",
                    "description": "Learn how to construct a basic binary tree by adding nodes as left and right children",
                    "hint": "Each node in a binary tree can have up to two children: a left child and a right child.",
                    "review": "Excellent! You've learned how to create a basic binary tree structure. Remember that each node can have at most two children.",
                    "difficulty": 1,
                    "visualization": {
                        "code": [
                            "class TreeNode {",
                            "    var value: Int",
                            "    var left: TreeNode?",
                            "    var right: TreeNode?",
                            "}",
                            "",
                            "func createTree() {",
                            "    let root = TreeNode(10)",
                            "    root.left = TreeNode(5)",
                            "    root.right = TreeNode(15)",
                            "}"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "First, we define our TreeNode class",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "root"
                                    }
                                ],
                                "connections": []
                            },
                            {
                                "lineNumber": 8,
                                "comment": "Create the root node with value 10",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    }
                                ],
                                "connections": []
                            },
                            {
                                "lineNumber": 9,
                                "comment": "Add the left child with value 5",
                                "userInputRequired": true,
                                "availableElements": [
                                    "5"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 10,
                                "comment": "Add the right child with value 15",
                                "userInputRequired": true,
                                "availableElements": [
                                    "15"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Inserting into a Binary Search Tree",
                    "description": "Learn how to insert a new node into a binary search tree while maintaining the ordering property",
                    "hint": "In a binary search tree, values less than a node go to the left, greater values go to the right.",
                    "review": "Great job! You've learned how to maintain the binary search tree property when inserting new nodes.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func insert(_ value: Int, into node: TreeNode) {",
                            "    if value < node.value {",
                            "        if node.left == nil {",
                            "            node.left = TreeNode(value)",
                            "        }",
                            "    } else {",
                            "        if node.right == nil {",
                            "            node.right = TreeNode(value)",
                            "        }",
                            "    }"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "Start with an existing binary search tree",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "15"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "Inserting 7: Compare with root (10). Since 7 < 10, go left",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "15"
                                    },
                                    {
                                        "value": "7"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 4,
                                "comment": "7 > 5, so it becomes the right child of 5",
                                "userInputRequired": true,
                                "availableElements": [
                                    "7"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "15"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight",
                                        "label": "right",
                                        "isHighlighted": true
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Tree Traversal",
                    "description": "Learn how to traverse a binary tree in-order",
                    "hint": "In-order traversal visits the left subtree, then the current node, then the right subtree.",
                    "review": "Excellent! You've learned how to perform an in-order traversal of a binary tree.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func inorderTraversal(_ node: TreeNode) {",
                            "    if let left = node.left {",
                            "        inorderTraversal(left)",
                            "    }",
                            "    print(node.value)",
                            "    if let right = node.right {",
                            "        inorderTraversal(right)",
                            "    }",
                            "}"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "Start with a binary tree",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2"
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Visit the leftmost path first",
                                "userInputRequired": false,
                                
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "Process nodes in-order: 2, 4, 6, 8, 12",
                                "userInputRequired": true,
                                "availableElements": [
                                    "2",
                                    "4",
                                    "6",
                                    "8",
                                    "12"
                                ],
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2"
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "straight",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight",
                                        "label": "left"
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "straight",
                                        "label": "right"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        }
    ]
}