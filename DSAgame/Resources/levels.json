{
    "levels": [
        {
            "number": 1,
            "topic": "Linked Lists",
            "description": "Learn about linked lists and how to build them step by step.",
            "requiredStars": 0,
            "questions": [
                {
                    "type": "visualization",
                    "title": "Understanding Circular Arrays",
                    "description": "Learn how circular arrays work by watching the code execute and then building your own operations",
                    "hint": "Key formulas: 1) For enqueue: rear = (rear + 1) % size moves rear forward, wrapping to 0 when needed. 2) For dequeue: front = (front + 1) % size moves front forward similarly. 3) Array is full when (rear + 1) % size equals front!",
                    "review": "Excellent! You've mastered both enqueue and dequeue operations on a circular array, including handling empty and full conditions.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "class CircularArray:",
                            "    def __init__(self, size=6):",
                            "        self.size = size",
                            "        self.array = [None] * size",
                            "        self.front = -1",
                            "        self.rear = -1",
                            "",
                            "    def is_empty(self):",
                            "        return self.front == -1",
                            "",
                            "    def is_full(self):",
                            "        return (self.rear + 1) % self.size == self.front",
                            "",
                            "    def enqueue(self, value):",
                            "        if self.is_full():",
                            "            return False",
                            "        if self.is_empty():",
                            "            self.front = 0",
                            "        self.rear = (self.rear + 1) % self.size",
                            "        self.array[self.rear] = value",
                            "        return True",
                            "",
                            "    def dequeue(self):",
                            "        if self.is_empty():",
                            "            return None",
                            "        value = self.array[self.front]",
                            "        self.array[self.front] = None",
                            "        if self.front == self.rear:",
                            "            self.front = self.rear = -1",
                            "        else:",
                            "            self.front = (self.front + 1) % self.size",
                            "        return value"
                        ],
                        "dataStructureType": "array",
                        "steps": [
                            {
                                "lineNumber": 2,
                                "comment": "Let's understand how CircularArray works. We start with an empty array of size 6, and two pointers: front and rear, both initialized to -1",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 8,
                                "comment": "The is_empty() method checks if the array is empty. An array is empty when front is -1",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 11,
                                "comment": "The is_full() method is more complex. Let's see how it works with some examples",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 12,
                                "comment": "What will be the result of (rear + 1) % size in this case?",
                                "userInputRequired": false,
                                "availableElements": [],
                                "isMultipleChoice": true,
                                "multipleChoiceAnswers": ["0", "1", "4", "5"],
                                "multipleChoiceCorrectAnswer": "5",
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 12,
                                "comment": "Since (rear + 1) % size (5) equals front (0), this means the array is full. If they were different, it would mean we have space to add another element.",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 4
                                }
                            },
                            {
                                "lineNumber": 14,
                                "comment": "Let's try enqueuing elements. First, let's add 'A' to the empty array, where should we put A?",
                                "hint": "The rear pointer should be incremented to 0, since the array is empty and we're adding the first element",
                                "userInputRequired": true,
                                "availableElements": [
                                    "A"
                                ],
                                "nodes": [
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": -1,
                                    "rear": -1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Since array was empty, front is set to 0. Rear is also set to 0 for the first element",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 0
                                }
                            },
                            {
                                "lineNumber": 20,
                                "comment": "For the next element 'B', where should we put B?",
                                "userInputRequired": true,
                                "availableElements": [
                                    "B"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Notice how the rear pointer moved from 0 to 1 using the formula (rear + 1) % size. This is how we maintain the circular nature of the array - when we reach the end, the modulo operation wraps us back to the beginning.",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 1
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Perfect! Now let's add 'C'. Rear will move to (1 + 1) % 6 = 2",
                                "userInputRequired": true,
                                "availableElements": [
                                    "C"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 2
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "Great! Let's see what happens when we reach the end. Add 'D', 'E', and 'F'",
                                "userInputRequired": true,
                                "availableElements": [
                                    "D",
                                    "E",
                                    "F"
                                ],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "",
                                        "label": "3"
                                    },
                                    {
                                        "value": "",
                                        "label": "4"
                                    },
                                    {
                                        "value": "",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 2
                                }
                            },
                            {
                                "lineNumber": 19,
                                "comment": "The array is now full! Notice how rear points to the last element and (rear + 1) % size equals front",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "highlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 23,
                                "comment": "Let's start the dequeue operation",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "highlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 24,
                                "comment": "First we check if the queue is empty (it's not since front is 0)",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "A",
                                        "highlighted": true,
                                        "label": "value"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 26,
                                "comment": "Get the value at front (A) and set that position to None",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "highlighted": true,
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 27,
                                "comment": "Since front (0) doesn't equal rear (5), we go to the else block",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 0,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 29,
                                "comment": "Move front forward using (front + 1) % size = (0 + 1) % 6 = 1",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "highlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 1,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 23,
                                "comment": "Now let's call dequeue() again. What happens to B?",
                                "userInputRequired": true,
                                "availableElements": [
                                    "B"
                                ],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "B",
                                        "highlighted": true,
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 1,
                                    "rear": 5
                                }
                            },
                            {
                                "lineNumber": 29,
                                "comment": "Perfect! We dequeued B, set position 1 to None, and moved front to 2. The queue now contains [C, D, E, F]",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "0"
                                    },
                                    {
                                        "value": "",
                                        "label": "1"
                                    },
                                    {
                                        "value": "C",
                                        "highlighted": true,
                                        "label": "2"
                                    },
                                    {
                                        "value": "D",
                                        "label": "3"
                                    },
                                    {
                                        "value": "E",
                                        "label": "4"
                                    },
                                    {
                                        "value": "F",
                                        "label": "5"
                                    }
                                ],
                                "pointers": {
                                    "front": 2,
                                    "rear": 5
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Inserting into a Linked List",
                    "description": "Learn how to insert a new node into the middle of a linked list",
                    "hint": "When inserting a node in the middle, we need to: 1) Create the new node, 2) Point it to the next node, 3) Update the previous node to point to our new node.",
                    "review": "Excellent! You've mastered inserting nodes into a linked list. Remember the order of operations: first connect the new node to the next one, then update the previous node's pointer.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func insertNode(value: Int, after: Node) {",
                            "    let newNode = Node(value)",
                            "    newNode.next = after.next",
                            "    after.next = newNode",
                            "}"
                        ],
                        "dataStructureType": "linkedList",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "We start with an existing linked list",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "1",
                                        "label": "head"
                                    },
                                    {
                                        "value": "3"
                                    },
                                    {
                                        "value": "5"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "Create a new node with value 4",
                                "userInputRequired": true,
                                "availableElements": [
                                    "4"
                                ],
                                "nodes": [
                                    {
                                        "value": "1",
                                        "label": "head"
                                    },
                                    {
                                        "value": "3"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Point the new node to the next node (5)",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "1",
                                        "label": "head"
                                    },
                                    {
                                        "value": "3"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "4"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 3,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 4,
                                "comment": "Update the previous node to point to the new node",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "1",
                                        "label": "head"
                                    },
                                    {
                                        "value": "3"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "4"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 3,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Deleting from a Linked List",
                    "description": "Learn how to remove a node from a linked list",
                    "hint": "To delete a node, we need to update the previous node's pointer to skip over the node we want to delete. The skipped node will no longer be part of the list.",
                    "review": "Well done! You've learned how to delete nodes from a linked list. By updating the pointers to skip a node, we effectively remove it from the list without breaking the chain.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func deleteNode(after: Node) {",
                            "    // Skip the next node by updating the pointer",
                            "    after.next = after.next?.next",
                            "}"
                        ],
                        "dataStructureType": "linkedList",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "We start with an existing linked list",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "6"
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 2,
                                        "to": 3,
                                        "style": "straight"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Update the pointer to skip node with value 6",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "6",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 2,
                                        "to": 3,
                                        "style": "straight",
                                        "isHighlighted": true
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Node is now removed from the list",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "2",
                                        "label": "head"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "8"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "straight"
                                    },
                                    {
                                        "from": 1,
                                        "to": 2,
                                        "style": "straight"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "number": 2,
            "topic": "Binary Trees",
            "description": "Learn about binary trees and how they organize data hierarchically.",
            "requiredStars": 3,
            "questions": [
                {
                    "type": "visualization",
                    "title": "Building a Binary Tree",
                    "description": "Learn how to construct a basic binary tree by adding nodes as left and right children",
                    "hint": "Each node in a binary tree can have up to two children: a left child and a right child.",
                    "review": "Excellent! You've learned how to create a basic binary tree structure. Remember that each node can have at most two children.",
                    "difficulty": 1,
                    "visualization": {
                        "code": [
                            "class TreeNode {",
                            "    var value: Int",
                            "    var left: TreeNode?",
                            "    var right: TreeNode?",
                            "}",
                            "",
                            "func createTree() {",
                            "    let root = TreeNode(10)",
                            "    root.left = TreeNode(5)",
                            "    root.right = TreeNode(15)",
                            "}"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "First, we define our TreeNode class",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "",
                                        "label": "root"
                                    }
                                ],
                                "connections": []
                            },
                            {
                                "lineNumber": 8,
                                "comment": "Create the root node with value 10",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    }
                                ],
                                "connections": []
                            },
                            {
                                "lineNumber": 9,
                                "comment": "Add the left child with value 5",
                                "userInputRequired": true,
                                "availableElements": [
                                    "5"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 10,
                                "comment": "Add the right child with value 15",
                                "userInputRequired": true,
                                "availableElements": [
                                    "15"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Inserting into a Binary Search Tree",
                    "description": "Learn how to insert a new node into a binary search tree while maintaining the ordering property",
                    "hint": "In a binary search tree, values less than a node go to the left, greater values go to the right.",
                    "review": "Great job! You've learned how to maintain the binary search tree property when inserting new nodes.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func insert(_ value: Int, into node: TreeNode) {",
                            "    if value < node.value {",
                            "        if node.left == nil {",
                            "            node.left = TreeNode(value)",
                            "        }",
                            "    } else {",
                            "        if node.right == nil {",
                            "            node.right = TreeNode(value)",
                            "        }",
                            "    }"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "Start with an existing binary search tree",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "15"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 2,
                                "comment": "Inserting 7: Compare with root (10). Since 7 < 10, go left",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "5"
                                    },
                                    {
                                        "value": "15"
                                    },
                                    {
                                        "value": "7"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 4,
                                "comment": "7 > 5, so it becomes the right child of 5",
                                "userInputRequired": true,
                                "availableElements": [
                                    "7"
                                ],
                                "nodes": [
                                    {
                                        "value": "10",
                                        "label": "root"
                                    },
                                    {
                                        "value": "5",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "15"
                                    },
                                    {
                                        "value": ""
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "curved",
                                        "label": "right",
                                        "isHighlighted": true
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "visualization",
                    "title": "Tree Traversal",
                    "description": "Learn how to traverse a binary tree in-order",
                    "hint": "In-order traversal visits the left subtree, then the current node, then the right subtree.",
                    "review": "Excellent! You've learned how to perform an in-order traversal of a binary tree.",
                    "difficulty": 2,
                    "visualization": {
                        "code": [
                            "func inorderTraversal(_ node: TreeNode) {",
                            "    if let left = node.left {",
                            "        inorderTraversal(left)",
                            "    }",
                            "    print(node.value)",
                            "    if let right = node.right {",
                            "        inorderTraversal(right)",
                            "    }",
                            "}"
                        ],
                        "dataStructureType": "binaryTree",
                        "steps": [
                            {
                                "lineNumber": 1,
                                "comment": "Start with a binary tree",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2"
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 3,
                                "comment": "Visit the leftmost path first",
                                "userInputRequired": false,
                                "availableElements": [],
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2",
                                        "isHighlighted": true
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "curved",
                                        "label": "left",
                                        "isHighlighted": true
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            },
                            {
                                "lineNumber": 5,
                                "comment": "Process nodes in-order: 2, 4, 6, 8, 12",
                                "userInputRequired": true,
                                "availableElements": [
                                    "2",
                                    "4",
                                    "6",
                                    "8",
                                    "12"
                                ],
                                "nodes": [
                                    {
                                        "value": "8",
                                        "label": "root"
                                    },
                                    {
                                        "value": "4"
                                    },
                                    {
                                        "value": "12"
                                    },
                                    {
                                        "value": "2"
                                    },
                                    {
                                        "value": "6"
                                    }
                                ],
                                "connections": [
                                    {
                                        "from": 0,
                                        "to": 1,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 0,
                                        "to": 2,
                                        "style": "curved",
                                        "label": "right"
                                    },
                                    {
                                        "from": 1,
                                        "to": 3,
                                        "style": "curved",
                                        "label": "left"
                                    },
                                    {
                                        "from": 1,
                                        "to": 4,
                                        "style": "curved",
                                        "label": "right"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        }
    ]
}